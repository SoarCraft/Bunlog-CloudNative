apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cna-default
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/cna-default: "true"
  podSelector:
    matchLabels:
      io.kompose.network/cna-default: "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: postgres-data
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: pg
  name: pg
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pg
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/cna-default: "true"
        io.kompose.service: pg
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: cna
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: swr.eu-de.otc.t-systems.com/testtesttest/pg:latest
          name: pg
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
      imagePullSecrets:
        - name: default-secret
status: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: pg
  name: pg
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: pg
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.network/cna-default: "true"
        io.kompose.service: web
    spec:
      containers:
        - env:
            - name: NEXTAUTH_SECRET
              value: Aloento
            - name: POSTGRES_PRISMA_URL
              value: postgresql://postgres:postgres@pg:5432/cna?sslmode=disable
          image: swr.eu-de.otc.t-systems.com/testtesttest/web:latest
          name: web
          ports:
            - containerPort: 3000
          resources: {}
      restartPolicy: Always
      imagePullSecrets:
        - name: default-secret
status: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: web
  type: NodePort
status:
  loadBalancer: {}
